% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_build_request.R
\name{gs_generate_request}
\alias{gs_generate_request}
\alias{gs_build_request}
\title{Generate a request for the Sheets v4 API}
\usage{
gs_generate_request(endpoint = character(), params = list(),
  .api_key = api_key())

gs_build_request(path, method, params = list(), .api_key = api_key())
}
\arguments{
\item{endpoint}{\code{character(1)}\cr Nickname for one of the documented Sheets
v4 API endpoints. \emph{to do: list or link, once I've auto-generated those
docs}}

\item{params}{\code{named list()}\cr Parameters destined for endpoint URL
substitution or, otherwise, the query.}

\item{.api_key}{\code{character(1)}\cr A valid \href{https://developers.google.com/sheets/api/guides/authorizing#APIKey}{APIkey}.
Defaults to a key built into the googlesheets package.}

\item{path}{character, e.g.,
\code{"v4/spreadsheets/{spreadsheetId}/values/{range}:append"}. It can include
variables inside curly brackets, as the example does, which are substituted
using named parameters found in the \code{params} argument.}

\item{method}{character, should match an HTTP verb, e.g., \code{GET}, \code{POST}, or
\code{PUT}}
}
\value{
\code{list()}\cr Components are \code{method}, \code{path}, \code{query}, and \code{url},
suitable as input for \code{\link[=gs_make_request]{gs_make_request()}}. The \code{path} is post-substitution
and the \code{query} is a named list of all the input \code{params} that were not
used during this substitution. \code{url} is the full URL after prepending the
base URL for the Sheets v4 API and appending an API key to the query.
}
\description{
Generate a request, using some knowledge of the \href{https://developers.google.com/sheets/api/reference/rest/}{Sheets v4API}. Most users
should, instead, use higher-level wrappers that facilitate common tasks, such
as reading the contents of a sheet. The functions here are intended for
internal use and for programming around the Sheets API.
}
\details{
There are two functions:
\itemize{
\item \code{gs_generate_request()} is a wrapper around \code{gs_build_request()}. It takes
a nickname for an endpoint and uses the API spec to look up the \code{path} and
\code{method}. The \code{params} are checked for validity and completeness with respect
to the endpoint. It then passes things along to \code{gs_build_request()}.
\item \code{gs_build_request()} builds a request from explicit parts. It is quite
dumb, only doing URL endpoint substitution and URL formation. It's up to the
caller to make sure the \code{path}, \code{method}, and \code{params} are valid.
}
}
\examples{
req <- gs_generate_request(
  "spreadsheets.values.append",
  list(
    spreadsheetId = "abc",
    range = "Sheet1!A1:B2",
    responseValueRenderOption = "FORMULA"
  )
)
req
req <- gs_build_request(
  path = "v4/spreadsheets/{spreadsheetId}/values/{range}:append",
  method = "POST",
  list(
    spreadsheetId = "abc",
    range = "Sheet1!A1:B2",
    responseValueRenderOption = "FORMULA"
  )
)
req
}
