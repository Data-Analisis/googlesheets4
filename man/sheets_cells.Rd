% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sheets_cells.R
\name{sheets_cells}
\alias{sheets_cells}
\title{Read cells from a Sheet}
\usage{
sheets_cells(ss, sheet = NULL, range = NULL)
}
\arguments{
\item{ss}{Something that uniquely identifies a Google Sheet. Processed
through \code{\link[=as_sheets_id]{as_sheets_id()}}.}

\item{sheet}{Sheet to read, as in "worksheet" or "tab". Either a string (the
name of a sheet), or an integer (the position of the sheet). Ignored if the
sheet is specified via \code{range}. If neither argument specifies the sheet,
defaults to the first visible sheet.}

\item{range}{A cell range to read from, as described in \href{https://developers.google.com/sheets/api/guides/concepts#a1_notation}{Sheets A1 notation}.
This is fairly standard spreadsheet range notation, although a bit
different from Excel. Examples of valid ranges: \code{"Sheet1!A1:B2"},
\code{"Sheet1!A:A"}, \code{"Sheet1!1:2"}, \code{"Sheet1!A5:A"}, \code{"A1:B2"}, \code{"Sheet1"}.
Note this can be a sheet name, like \code{"Sheet1"}, or a named range, like
\code{"sales_data"}, without any cell reference.}
}
\value{
A tibble with one row per non-empty cell in the \code{range}. \emph{this might
get dignified with a class?}
}
\description{
WIP! A low-level function that is, however, meant to be exposed. Retrieves
cell data and puts into a tibble with \code{row}, \code{column}, \code{loc}, and a \code{cell}
list-column.
}
\examples{
sheets_cells(sheets_example("design-dates"))
#sheets_cells(sheets_example("gapminder"))
sheets_cells(sheets_example("mini-gap"))
sheets_cells(sheets_example("ff"))

test_sheet <- "1J5gb0u8n3D2qx3O3rY28isnI5SD89attRwhWPWlkmDM"
sheets_cells(test_sheet)
sheets_cells(test_sheet, range = "date-timeofday-duration")
x <- sheets_cells(test_sheet, range = "C2:D4")
x
#x \%>\% tidyr::complete(row, col, fill = list(cell = list(list())))
}
